axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Raw LOOP values") +
annotate("label", x = -7000, y = 13.5, label = "X2 and X4") +
annotate("label", x = -3100, y = 9.5, label = "X4 only") +
annotate("label", x = -3100, y = 5.5,  label = "X2 only") +
annotate("label", x = -3100, y = 2, label = "None")
g1
## plot all models together
g1 = ggplot(loop_tab, aes(x = LOOP.X50, y = model, group = iter, colour = model)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = LOOP.X5,
xmax = LOOP.X95),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Raw LOOP values") +
annotate("label", x = -7200, y = 13.5, label = "X2 and X4") +
annotate("label", x = -3100, y = 9.5, label = "X4 only") +
annotate("label", x = -3100, y = 5.5,  label = "X2 only") +
annotate("label", x = -3100, y = 2, label = "None")
g1
## plot all models together
g1 = ggplot(loop_tab, aes(x = LOOP.X50, y = model, group = iter, colour = model)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = LOOP.X5,
xmax = LOOP.X95),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Raw LOOP values") +
annotate("label", x = -7500, y = 13.5, label = "X2 and X4") +
annotate("label", x = -3100, y = 9.5, label = "X4 only") +
annotate("label", x = -3100, y = 5.5,  label = "X2 only") +
annotate("label", x = -3100, y = 2, label = "None")
g1
## plot all models together
g1 = ggplot(loop_tab, aes(x = LOOP.X50, y = model, group = iter, colour = model)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = LOOP.X5,
xmax = LOOP.X95),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Raw LOOP values") +
annotate("label", x = -7500, y = 13.5, label = "X2 and X4") +
annotate("label", x = -3100, y = 9.5, label = "X4 only") +
annotate("label", x = -3100, y = 5.5,  label = "X2 only") +
annotate("label", x = -3100, y = 2, label = "None")
ggsave("plot_loop.png", g1, width=6, height=7.5, units="in", device="png")
## plotting the MRP estimates against 'truth'
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(survey)
library(forcats)
## extracting popn. estimates and upper and lower bound
popnest_tab = sim_list1[c(1:64,66:76,78:100)] %>%
lapply(., function(x)(x[,c('popnestX5','popnestX50', 'popnestX95')])) %>%
lapply(., function(x) cbind(x, model=c(paste0('model0',1:9), paste0('model',10:15)))) %>%
do.call(rbind, .) %>%
mutate(iter = rep(1:5, each=15)) %>%
arrange(., model) %>%
set_rownames(., 1:(length(sim_list1)*15))
## extracting popn. estimates and upper and lower bound
popnest_tab = sim_list1[c(1:64,66:76,78:100)] %>%
lapply(., function(x)(x[,c('popnestX5','popnestX50', 'popnestX95')])) %>%
lapply(., function(x) cbind(x, model=c(paste0('model0',1:9), paste0('model',10:15)))) %>%
do.call(rbind, .) %>%
mutate(iter = rep(1:98, each=15)) %>%
arrange(., model) %>%
set_rownames(., 1:(988*15))
## extracting popn. estimates and upper and lower bound
popnest_tab = sim_list1[c(1:64,66:76,78:100)] %>%
lapply(., function(x)(x[,c('popnestX5','popnestX50', 'popnestX95')])) %>%
lapply(., function(x) cbind(x, model=c(paste0('model0',1:9), paste0('model',10:15)))) %>%
do.call(rbind, .) %>%
mutate(iter = rep(1:98, each=15)) %>%
arrange(., model) %>%
set_rownames(., 1:(98*15))
popnest_tab
## comparing to 'truth'
popnest_tab$mean_pe = as.numeric(popnest_tab[,2] - pt_list) # recursive diff for pt_list
popnest_tab$low_pe = as.numeric(popnest_tab[,1]  - pt_list)
popnest_tab[,2]
pt_list
rep(pt_list, 2)
as.numeric(popnest_tab[,2] - rep(pt_list, 15))
popnest_tab[,2]
length(popnest_tab[,2])
length(rep(pt_list, 15))
rep(pt_list[c(1:64,66:76,78:100)], 15)
length(rep(pt_list[c(1:64,66:76,78:100)], 15))
as.numeric(popnest_tab[,2] - rep(pt_list[c(1:64,66:76,78:100)], 15))
## comparing to 'truth'
popnest_tab$mean_pe = as.numeric(popnest_tab[,2] - rep(pt_list[c(1:64,66:76,78:100)], 15)) # recursive diff for pt_list
popnest_tab$low_pe = as.numeric(popnest_tab[,1]  - rep(pt_list[c(1:64,66:76,78:100)], 15))
popnest_tab$upp_pe = as.numeric(popnest_tab[,3]  - rep(pt_list[c(1:64,66:76,78:100)], 15))
pc = popnest_tab %>%
mutate(range_pe = popnestX95 - popnestX5) %>%
mutate(model = factor(model)) %>%
mutate(model = plyr::revalue(model, c('model01' = 'X1',
'model02' = 'X2',
'model03' = 'X3',
'model04' = 'X4',
'model05' = 'X1 + X2',
'model06' = 'X1 + X3',
'model07' = 'X1 + X4',
'model08' = 'X2 + X3',
'model09' = 'X2 + X4',
'model10' = 'X3 + X4',
'model11' = 'X1 + X2 + X3',
'model12' = 'X1 + X2 + X4',
'model13' = 'X1 + X3 + X4',
'model14' = 'X2 + X3 + X4',
'model15' = 'X1 + X2 + X3 + X4')))
pc$model = fct_relevel(pc$model, c('X2 + X4', 'X1 + X2 + X4', 'X2 + X3 + X4', 'X1 + X2 + X3 + X4',
'X4', 'X1 + X4', 'X3 + X4', 'X1 + X3 + X4',
'X2', 'X1 + X2', 'X2 + X3', 'X1 + X2 + X3',
'X1', 'X3', 'X1 + X3'))
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.02, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.05, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.1, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.08, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.07, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
range(pc$mean_pe)
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.05, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.06, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
iscrete(limits = rev) +
scale_col
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.06, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
ggsave("plot_mrp_truth.png", g1, width=6, height=7.5, units="in", device="png")
## plotting range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantil range for MRP estimate ") +
annotate("label", x = 0.05, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.05, y = 9.5, label = "X4 only") +
annotate("label", x = 0.05, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.05, y = 2, label = "None")
g4
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
annotate("label", x = 0.05, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.05, y = 9.5, label = "X4 only") +
annotate("label", x = 0.05, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.05, y = 2, label = "None")
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
# annotate("label", x = 0.05, y = 13.5, label = "X2 and X4") +
# annotate("label", x = 0.05, y = 9.5, label = "X4 only") +
# annotate("label", x = 0.05, y = 5.5,  label = "X2 only") +
# annotate("label", x = 0.05, y = 2, label = "None")
ggsave("plot_mrp_qt_range.png", g4, width=6, height=7.5, units="in", device="png")
ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ")
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
annotate("label", x = 0.09, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.09, y = 9.5, label = "X4 only") +
annotate("label", x = 0.09, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.09, y = 2, label = "None")
g4
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
annotate("label", x = 0.09, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.09, y = 9.5, label = "X4 only") +
annotate("label", x = 0.09, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.09, y = 2, label = "None")
ggsave("plot_mrp_qt_range.png", g4, width=6, height=7.5, units="in", device="png")
setwd("~/GitHub/LOO_MRP/02-super popn experiment/01-code/popn2/experiment3b")
setwd("~/MRP project/02-super popn/02-data")
## plotting the MRP estimates against 'truth'
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(survey)
library(forcats)
## extracting popn. estimates and upper and lower bound
popnest_tab = sim_list1[c(1:64,66:76,78:100)] %>%
lapply(., function(x)(x[,c('popnestX5','popnestX50', 'popnestX95')])) %>%
lapply(., function(x) cbind(x, model=c(paste0('model0',1:9), paste0('model',10:15)))) %>%
do.call(rbind, .) %>%
mutate(iter = rep(1:98, each=15)) %>%
arrange(., model) %>%
set_rownames(., 1:(98*15))
rep(pt_list, 15)
## comparing to 'truth'
popnest_tab$mean_pe = as.numeric(popnest_tab[,2] - rep(pt_list[c(1:64,66:76,78:100)], 15)) # recursive diff for pt_list
popnest_tab$low_pe = as.numeric(popnest_tab[,1]  - rep(pt_list[c(1:64,66:76,78:100)], 15))
popnest_tab$upp_pe = as.numeric(popnest_tab[,3]  - rep(pt_list[c(1:64,66:76,78:100)], 15))
pc = popnest_tab %>%
mutate(range_pe = popnestX95 - popnestX5) %>%
mutate(model = factor(model)) %>%
mutate(model = plyr::revalue(model, c('model01' = 'X1',
'model02' = 'X2',
'model03' = 'X3',
'model04' = 'X4',
'model05' = 'X1 + X2',
'model06' = 'X1 + X3',
'model07' = 'X1 + X4',
'model08' = 'X2 + X3',
'model09' = 'X2 + X4',
'model10' = 'X3 + X4',
'model11' = 'X1 + X2 + X3',
'model12' = 'X1 + X2 + X4',
'model13' = 'X1 + X3 + X4',
'model14' = 'X2 + X3 + X4',
'model15' = 'X1 + X2 + X3 + X4')))
pc$model = fct_relevel(pc$model, c('X2 + X4', 'X1 + X2 + X4', 'X2 + X3 + X4', 'X1 + X2 + X3 + X4',
'X4', 'X1 + X4', 'X3 + X4', 'X1 + X3 + X4',
'X2', 'X1 + X2', 'X2 + X3', 'X1 + X2 + X3',
'X1', 'X3', 'X1 + X3'))
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.06, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
g1
setwd("~/GitHub/LOO_MRP/02-super popn experiment/01-code/popn2/experiment3b")
## plot diff in mean
g1 = ggplot(pc, aes(x = mean_pe, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
geom_point(position = position_dodge(width = .5)) +
xlim(c(-0.06, 0.25)) +
geom_errorbarh(mapping = aes(xmin = low_pe,
xmax = upp_pe),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
labs(title="Difference in MRP estimate and truth") +
annotate("label", x = 0.23, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.23, y = 9.5, label = "X4 only") +
annotate("label", x = 0.23, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.23, y = 2, label = "None")
ggsave("plot_mrp_truth.png", g1, width=6, height=7.5, units="in", device="png")
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
annotate("label", x = 0.09, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.09, y = 9.5, label = "X4 only") +
annotate("label", x = 0.09, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.09, y = 2, label = "None")
g4
## plotting variance range
g4 = ggplot(pc, aes(x = range_pe, y = model, group = model, fill = model)) +
geom_violin() +
#xlim(c(0.04, 0.1)) +
scale_y_discrete(limits = rev) +
scale_fill_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18,12)]) +
theme(legend.position = "none",
axis.title = element_blank()) +
labs(title="Quantile range for MRP estimate ") +
annotate("label", x = 0.09, y = 13.5, label = "X2 and X4") +
annotate("label", x = 0.09, y = 9.5, label = "X4 only") +
annotate("label", x = 0.09, y = 5.5,  label = "X2 only") +
annotate("label", x = 0.09, y = 2, label = "None")
ggsave("plot_mrp_qt_range.png", g4, width=6, height=7.5, units="in", device="png")
sim_list1
popnest_tab
## extracting loop
loop_se_tab = sim_list1[c(1:64,66:76,78:100)] %>%
lapply(., function(x)(x[,c('elpd.popnestX5', 'elpd.popnestX50', 'elpd.popnestX95')])) %>%
lapply(., function(x) cbind(x, model=c(paste0('model0',1:9), paste0('model',10:15)))) %>%
do.call(rbind, .) %>%
mutate(iter = rep(1:98, each=15)) %>%
arrange(., model) %>%
set_rownames(., 1:(98*15)) %>%
dplyr::rename(LOOP.X5 = elpd.popnestX5,
LOOP.X50 = elpd.popnestX50,
LOOP.X95 = elpd.popnestX95)
loop_se_tab
loop_tab = loop_se_tab %>%
mutate(model = factor(model)) %>%
mutate(model = plyr::revalue(model, c('model01' = 'X1',
'model02' = 'X2',
'model03' = 'X3',
'model04' = 'X4',
'model05' = 'X1 + X2',
'model06' = 'X1 + X3',
'model07' = 'X1 + X4',
'model08' = 'X2 + X3',
'model09' = 'X2 + X4',
'model10' = 'X3 + X4',
'model11' = 'X1 + X2 + X3',
'model12' = 'X1 + X2 + X4',
'model13' = 'X1 + X3 + X4',
'model14' = 'X2 + X3 + X4',
'model15' = 'X1 + X2 + X3 + X4')))
loop_tab$model = fct_relevel(loop_tab$model, c('X2 + X4', 'X1 + X2 + X4', 'X2 + X3 + X4', 'X1 + X2 + X3 + X4',
'X4', 'X1 + X4', 'X3 + X4', 'X1 + X3 + X4',
'X2', 'X1 + X2', 'X2 + X3', 'X1 + X2 + X3',
'X1', 'X3', 'X1 + X3'))
loop_tab$LOOP.X5
hist(loop_tab$LOOP.X5)
hist(loop_tab$LOOP.X50)
