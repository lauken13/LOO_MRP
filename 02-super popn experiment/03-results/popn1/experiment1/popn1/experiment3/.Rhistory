as.data.frame() %>%
set_colnames(c(paste0('elpd0',5:9), "elpd10", "elpd15")) %>%
mutate(model05 = .[,1] - .[,'elpd15'],
model06 = .[,2] - .[,'elpd15'],
model07 = .[,3] - .[,'elpd15'],
model08 = .[,4] - .[,'elpd15'],
model09 = .[,5] - .[,'elpd15'],
model10 = .[,6] - .[,'elpd15'])
## extracting elpd_loo and calculating difference with model15
elpd_tab = sim_list2 %>%
lapply(., function(x)(x[,'elpd_loo'])) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
set_colnames(c(paste0('elpd',11:15))) %>%
mutate(model11 = .[,1] - .[,'elpd15'],
model12 = .[,2] - .[,'elpd15'],
model13 = .[,3] - .[,'elpd15'],
model14 = .[,4] - .[,'elpd15'])
## se for loo_diff
sqrt(500) * sd(samp_data[[1]]$elpd_1 - samp_data[[1]]$elpd_15)
## se for loo_diff
sqrt(500) * sd(samp_data[[1]]$elpd_11 - samp_data[[1]]$elpd_15)
## calculate SE for weighted loo_diff
# calculating svy_rake weights for each sample
svy_rake_list = lapply(samp_data, function(x)svydesign(ids=~1, # cluster id, ~1 for no clusters
weights=~wts, # including raked weights in the survey design
data=x))
## calculate SE for weighted loo_diff
# calculating svy_rake weights for each sample
svy_rake_list = lapply(samp_data, function(x)svydesign(ids=~1, # cluster id, ~1 for no clusters
weights=~wts, # including raked weights in the survey design
data=x))
elpd_se_tab11 = list()
elpd_se_tab12 = list()
elpd_se_tab13 = list()
elpd_se_tab14 = list()
for(i in 1:length(samp_data)){
loo_diff_11 = samp_data[[i]]$elpd_11 - samp_data[[i]]$elpd_15
elpd_se_tab11[[i]] = svytotal(loo_diff_11, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_12 = samp_data[[i]]$elpd_12 - samp_data[[i]]$elpd_15
elpd_se_tab12[[i]] = svytotal(loo_diff_12, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_13 = samp_data[[i]]$elpd_13 - samp_data[[i]]$elpd_15
elpd_se_tab13[[i]] = svytotal(loo_diff_13, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_14 = samp_data[[i]]$elpd_14 - samp_data[[i]]$elpd_15
elpd_se_tab14[[i]] = svytotal(loo_diff_14, svy_rake_list[[i]]) %>%
as.data.frame(.)
}
elpd_se_tab11 = do.call(rbind, elpd_se_tab11)
elpd_se_tab11$model = "model11"
elpd_se_tab12 = do.call(rbind, elpd_se_tab12)
elpd_se_tab12$model = "model12"
elpd_se_tab13 = do.call(rbind, elpd_se_tab13)
elpd_se_tab13$model = "model13"
elpd_se_tab14 = do.call(rbind, elpd_se_tab14)
elpd_se_tab14$model = "model14"
elpd_se_tab = bind_rows(elpd_se_tab11,
elpd_se_tab12,
elpd_se_tab13,
elpd_se_tab14)
elpd_se_tab$low_elpd = elpd_se_tab[,'total'] - 1.64*elpd_se_tab[,'SE']
elpd_se_tab$upp_elpd = elpd_se_tab[,'total'] + 1.64*elpd_se_tab[,'SE']
elpd_se_tab$iter = rep(1:length(samp_data), 4)
#Example plot
ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(3,4,7,8,13,14,5,6,17,18)])
#Example plot
ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(5,6,17,18)])
#Example plot
ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(5,6,17,18)])
#Example plot
g = ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(5,6,17,18)])
ggsave("plot_loo_diff_1115.pdf", g, width=6, height=7.5, units="in", device="pdf")
getwd()
setwd("~/GitHub/LOO_MRP/02-super popn experiment/03-results/experiment3")
## plotting the elpd values against 'best' model
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(survey)
load("~/GitHub/LOO_MRP/02-super popn experiment/03-results/experiment3/simulated7temp_2.RData")
sim_list2 = sim_doub_list[1:7]
samp_data = samp_data_list[1:7]
## difference in elpd_loo values
sim_list2[[1]][,'elpd_loo']
## extracting elpd_loo and calculating difference with model15
elpd_tab = sim_list2 %>%
lapply(., function(x)(x[,'elpd_loo'])) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
set_colnames(c(paste0('elpd0',5:9), "elpd10", "elpd15")) %>%
mutate(model05 = .[,1] - .[,'elpd15'],
model06 = .[,2] - .[,'elpd15'],
model07 = .[,3] - .[,'elpd15'],
model08 = .[,4] - .[,'elpd15'],
model09 = .[,5] - .[,'elpd15'],
model10 = .[,6] - .[,'elpd15'])
## se for loo_diff
sqrt(500) * sd(samp_data[[1]]$elpd_1 - samp_data[[1]]$elpd_15)
## calculate SE for weighted loo_diff
# calculating svy_rake weights for each sample
svy_rake_list = lapply(samp_data, function(x)svydesign(ids=~1, # cluster id, ~1 for no clusters
weights=~wts, # including raked weights in the survey design
data=x))
elpd_se_tab5 = list()
elpd_se_tab6 = list()
elpd_se_tab7 = list()
elpd_se_tab8 = list()
elpd_se_tab9 = list()
elpd_se_tab10 = list()
for(i in 1:length(samp_data)){
loo_diff_5 = samp_data[[i]]$elpd_5 - samp_data[[i]]$elpd_15
elpd_se_tab5[[i]] = svytotal(loo_diff_5, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_6 = samp_data[[i]]$elpd_6 - samp_data[[i]]$elpd_15
elpd_se_tab6[[i]] = svytotal(loo_diff_6, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_7 = samp_data[[i]]$elpd_7 - samp_data[[i]]$elpd_15
elpd_se_tab7[[i]] = svytotal(loo_diff_7, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_8 = samp_data[[i]]$elpd_8 - samp_data[[i]]$elpd_15
elpd_se_tab8[[i]] = svytotal(loo_diff_8, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_9 = samp_data[[i]]$elpd_9 - samp_data[[i]]$elpd_15
elpd_se_tab9[[i]] = svytotal(loo_diff_9, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_10 = samp_data[[i]]$elpd_10 - samp_data[[i]]$elpd_15
elpd_se_tab10[[i]] = svytotal(loo_diff_10, svy_rake_list[[i]]) %>%
as.data.frame(.)
}
elpd_se_tab5 = do.call(rbind, elpd_se_tab5)
elpd_se_tab5$model = "model05"
elpd_se_tab6 = do.call(rbind, elpd_se_tab6)
elpd_se_tab6$model = "model06"
elpd_se_tab7 = do.call(rbind, elpd_se_tab7)
elpd_se_tab7$model = "model07"
elpd_se_tab8 = do.call(rbind, elpd_se_tab8)
elpd_se_tab8$model = "model08"
elpd_se_tab9 = do.call(rbind, elpd_se_tab9)
elpd_se_tab9$model = "model09"
elpd_se_tab10 = do.call(rbind, elpd_se_tab10)
elpd_se_tab10$model = "model10"
elpd_se_tab = bind_rows(elpd_se_tab5,
elpd_se_tab6,
elpd_se_tab7,
elpd_se_tab8,
elpd_se_tab9,
elpd_se_tab10)
elpd_se_tab$low_elpd = elpd_se_tab[,'total'] - 1.64*elpd_se_tab[,'SE']
elpd_se_tab$upp_elpd = elpd_se_tab[,'total'] + 1.64*elpd_se_tab[,'SE']
elpd_se_tab$iter = rep(1:length(samp_data), 6)
#Example plot
ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(3,4,7,8,13,14,5,6,17,18)])
getwd
getwd()
ggsave("plot_loo_diff_0510.pdf", g, width=6, height=7.5, units="in", device="pdf")
#Example plot
g = ggplot(elpd_se_tab, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(3,4,7,8,13,14,5,6,17,18)])
ggsave("plot_loo_diff_0510.pdf", g, width=6, height=7.5, units="in", device="pdf")
source("~/GitHub/LOO_MRP/02-super popn experiment/01-code/experiment3/plot_loo_diff_0104.R")
elpd_se_tab
ph1 = elpd_se_tab
## plotting the elpd values against 'best' model
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(survey)
load("~/GitHub/LOO_MRP/02-super popn experiment/03-results/experiment3/simulated7temp_2.RData")
sim_list2 = sim_doub_list[1:7]
samp_data = samp_data_list[1:7]
## difference in elpd_loo values
sim_list2[[1]][,'elpd_loo']
## extracting elpd_loo and calculating difference with model15
elpd_tab = sim_list2 %>%
lapply(., function(x)(x[,'elpd_loo'])) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
set_colnames(c(paste0('elpd0',5:9), "elpd10", "elpd15")) %>%
mutate(model05 = .[,1] - .[,'elpd15'],
model06 = .[,2] - .[,'elpd15'],
model07 = .[,3] - .[,'elpd15'],
model08 = .[,4] - .[,'elpd15'],
model09 = .[,5] - .[,'elpd15'],
model10 = .[,6] - .[,'elpd15'])
## se for loo_diff
sqrt(500) * sd(samp_data[[1]]$elpd_1 - samp_data[[1]]$elpd_15)
## calculate SE for weighted loo_diff
# calculating svy_rake weights for each sample
svy_rake_list = lapply(samp_data, function(x)svydesign(ids=~1, # cluster id, ~1 for no clusters
weights=~wts, # including raked weights in the survey design
data=x))
elpd_se_tab5 = list()
elpd_se_tab6 = list()
elpd_se_tab7 = list()
elpd_se_tab8 = list()
elpd_se_tab9 = list()
elpd_se_tab10 = list()
for(i in 1:length(samp_data)){
loo_diff_5 = samp_data[[i]]$elpd_5 - samp_data[[i]]$elpd_15
elpd_se_tab5[[i]] = svytotal(loo_diff_5, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_6 = samp_data[[i]]$elpd_6 - samp_data[[i]]$elpd_15
elpd_se_tab6[[i]] = svytotal(loo_diff_6, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_7 = samp_data[[i]]$elpd_7 - samp_data[[i]]$elpd_15
elpd_se_tab7[[i]] = svytotal(loo_diff_7, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_8 = samp_data[[i]]$elpd_8 - samp_data[[i]]$elpd_15
elpd_se_tab8[[i]] = svytotal(loo_diff_8, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_9 = samp_data[[i]]$elpd_9 - samp_data[[i]]$elpd_15
elpd_se_tab9[[i]] = svytotal(loo_diff_9, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_10 = samp_data[[i]]$elpd_10 - samp_data[[i]]$elpd_15
elpd_se_tab10[[i]] = svytotal(loo_diff_10, svy_rake_list[[i]]) %>%
as.data.frame(.)
}
elpd_se_tab5 = do.call(rbind, elpd_se_tab5)
elpd_se_tab5$model = "model05"
elpd_se_tab6 = do.call(rbind, elpd_se_tab6)
elpd_se_tab6$model = "model06"
elpd_se_tab7 = do.call(rbind, elpd_se_tab7)
elpd_se_tab7$model = "model07"
elpd_se_tab8 = do.call(rbind, elpd_se_tab8)
elpd_se_tab8$model = "model08"
elpd_se_tab9 = do.call(rbind, elpd_se_tab9)
elpd_se_tab9$model = "model09"
elpd_se_tab10 = do.call(rbind, elpd_se_tab10)
elpd_se_tab10$model = "model10"
elpd_se_tab = bind_rows(elpd_se_tab5,
elpd_se_tab6,
elpd_se_tab7,
elpd_se_tab8,
elpd_se_tab9,
elpd_se_tab10)
elpd_se_tab$low_elpd = elpd_se_tab[,'total'] - 1.64*elpd_se_tab[,'SE']
elpd_se_tab$upp_elpd = elpd_se_tab[,'total'] + 1.64*elpd_se_tab[,'SE']
elpd_se_tab$iter = rep(1:length(samp_data), 6)
elpd_se_tab
ph2 = elpd_se_tab
bind_rows(ph1,ph2)
## plotting the elpd values against 'best' model
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(survey)
load("~/GitHub/LOO_MRP/02-super popn experiment/03-results/experiment3/simulated29temp_3.RData")
sim_list2 = sim_trip_list[1:29]
samp_data = samp_data_list[1:29]
## difference in elpd_loo values
sim_list2[[1]][,'elpd_loo']
## extracting elpd_loo and calculating difference with model15
elpd_tab = sim_list2 %>%
lapply(., function(x)(x[,'elpd_loo'])) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
set_colnames(c(paste0('elpd',11:15))) %>%
mutate(model11 = .[,1] - .[,'elpd15'],
model12 = .[,2] - .[,'elpd15'],
model13 = .[,3] - .[,'elpd15'],
model14 = .[,4] - .[,'elpd15'])
## se for loo_diff
sqrt(500) * sd(samp_data[[1]]$elpd_11 - samp_data[[1]]$elpd_15)
## calculate SE for weighted loo_diff
# calculating svy_rake weights for each sample
svy_rake_list = lapply(samp_data, function(x)svydesign(ids=~1, # cluster id, ~1 for no clusters
weights=~wts, # including raked weights in the survey design
data=x))
elpd_se_tab11 = list()
elpd_se_tab12 = list()
elpd_se_tab13 = list()
elpd_se_tab14 = list()
for(i in 1:length(samp_data)){
loo_diff_11 = samp_data[[i]]$elpd_11 - samp_data[[i]]$elpd_15
elpd_se_tab11[[i]] = svytotal(loo_diff_11, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_12 = samp_data[[i]]$elpd_12 - samp_data[[i]]$elpd_15
elpd_se_tab12[[i]] = svytotal(loo_diff_12, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_13 = samp_data[[i]]$elpd_13 - samp_data[[i]]$elpd_15
elpd_se_tab13[[i]] = svytotal(loo_diff_13, svy_rake_list[[i]]) %>%
as.data.frame(.)
loo_diff_14 = samp_data[[i]]$elpd_14 - samp_data[[i]]$elpd_15
elpd_se_tab14[[i]] = svytotal(loo_diff_14, svy_rake_list[[i]]) %>%
as.data.frame(.)
}
elpd_se_tab11 = do.call(rbind, elpd_se_tab11)
elpd_se_tab11$model = "model11"
elpd_se_tab12 = do.call(rbind, elpd_se_tab12)
elpd_se_tab12$model = "model12"
elpd_se_tab13 = do.call(rbind, elpd_se_tab13)
elpd_se_tab13$model = "model13"
elpd_se_tab14 = do.call(rbind, elpd_se_tab14)
elpd_se_tab14$model = "model14"
elpd_se_tab = bind_rows(elpd_se_tab11,
elpd_se_tab12,
elpd_se_tab13,
elpd_se_tab14)
elpd_se_tab$low_elpd = elpd_se_tab[,'total'] - 1.64*elpd_se_tab[,'SE']
elpd_se_tab$upp_elpd = elpd_se_tab[,'total'] + 1.64*elpd_se_tab[,'SE']
elpd_se_tab$iter = rep(1:length(samp_data), 4)
ph3 = elpd_se_tab
ph = bind_rows(ph1,ph2,ph3)
#Example plot
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(5,6,17,18)])
#Example plot
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18)]) +
ggsave("plot_loo_diff_1115.pdf", g, width=6, height=7.5, units="in", device="pdf")
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500))
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5))
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7)
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred")
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev)
#Example plot
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.5, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.5, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18)])
#Example plot
ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.8, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.8, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18)])
ggsave("plot_loo_diff.pdf", g, width=6, height=7.5, units="in", device="pdf")
getwd()
#Example plot
g = ggplot(ph, aes(x = total, y = model, group = iter, colour = model))+
geom_vline(aes(xintercept = 0)) +
xlim(c(-2500, 1500)) +
geom_point(position = position_dodge(width = .5)) +
geom_errorbarh(mapping = aes(xmin = low_elpd,
xmax = upp_elpd),
position = position_dodge(width = .5),
height = 0, alpha = .7) +
theme(legend.position = "none",
axis.title = element_blank()) +
annotate("label", x = -1000, y = 0.8, label = "Model 15 preferred") +
annotate("label", x = 1000, y = 0.8, label = "Alt model preferred") +
scale_y_discrete(limits = rev) +
scale_colour_manual(values = pals::tableau20(20)[c(1,2,9,10,3,4,7,8,13,14,5,6,17,18)]) +
labs(title="Difference in elpd values")
g
ggsave("plot_loo_diff.pdf", g, width=6, height=7.5, units="in", device="pdf")
coef_list
sim_list
sim_list[[1]]
ph
elpd_se_tab
elpd_se_tab11
